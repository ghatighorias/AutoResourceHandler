<#@ template language="C#" #>
<#@ output extension=".cs" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>

// Make sure to set the customTool in the property panel of this file to "TextTemplatingFilePreprocessor"
// Make sure to set the customToolNamespace in the property panel of this file to "AutoAssetLoader.CodeGenerator"
//------------------------------------------------------------------------------
//   This code was generated by T4 template.
//   Any changes to this file may cause incorrect behavior and will be lost
//   when the code is regenerated.
//------------------------------------------------------------------------------

using System.ComponentModel;

namespace AutoAssetLoader
{
	<# foreach (var category in categorizedItems) { #>
	/// <summary>
		/// Enum indicating the available assets for loading using RessourceHandlerBase
		/// </summary>
		public enum <#= category.Key #>
		{
		<# foreach(var item in category.Value) {#>
	[Description("<#=item.guid#>")]
			<#=string.Format("{0},", getEnumName(item))#>
		<#}#>}
	<#}#>

}

<#+
    Dictionary<string, List<FileItemDescriptor>> categorizedItems = new Dictionary<string, List<FileItemDescriptor>>();
	string fileName;
	string enumPrefix;
	string saveLocation;
    bool capitalizeAssetNames;

	string getEnumName(FileItemDescriptor item)
	{
		var uniqueName = item.nameExist ? $"{item.NormalizedDirectory}_{item.NormalizedName}" : item.NormalizedName;
		return capitalizeAssetNames ? uniqueName.ToUpper() : uniqueName;
	}

	public static void GenerateAndSave(Dictionary<string, List<FileItemDescriptor>> categorizedItems, ClassDescriptor descriptor)
	{
			if (categorizedItems == null || categorizedItems.Count == 0)
				throw new Exception("AutoAssetLoader Failed: No data to generate output from");

	        ResourceHandlerCodeGenerator t4 = new ResourceHandlerCodeGenerator();
			t4.fileName = descriptor.fileName;
			t4.enumPrefix = descriptor.enumPrefix;
			t4.saveLocation = descriptor.saveLocation;
			t4.capitalizeAssetNames = descriptor.capitalizeAssetNames;
			t4.categorizedItems = categorizedItems;

            var fileName = string.Format("./{0}/{1}.cs", t4.saveLocation, t4.fileName);
            using (var writer = System.IO.File.CreateText(fileName))
            {
                writer.WriteLine(t4.TransformText());
                writer.Flush();
            }
	}
#>